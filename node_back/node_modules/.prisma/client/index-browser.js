
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.13.0
 * Query Engine version: b20ead4d3ab9e78ac112966e242ded703f4a052c
 */
Prisma.prismaVersion = {
  client: "4.13.0",
  engine: "b20ead4d3ab9e78ac112966e242ded703f4a052c"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdministracionScalarFieldEnum = {
  DNI_Admin: 'DNI_Admin',
  Nombre: 'Nombre',
  Apellido: 'Apellido',
  Mail: 'Mail',
  Contrasena: 'Contrasena'
};

exports.Prisma.AlumnoScalarFieldEnum = {
  Dni_Alumno: 'Dni_Alumno',
  Nombre: 'Nombre',
  Apellido: 'Apellido',
  Mail: 'Mail',
  contrasena: 'contrasena'
};

exports.Prisma.ClaseScalarFieldEnum = {
  Clase_ID: 'Clase_ID',
  Division_ID: 'Division_ID',
  Materia_ID: 'Materia_ID',
  Profesor_ID: 'Profesor_ID',
  Fecha_Comienzo: 'Fecha_Comienzo',
  Fecha_Final: 'Fecha_Final'
};

exports.Prisma.DivisionScalarFieldEnum = {
  Division_ID: 'Division_ID',
  Ano_Escolar: 'Ano_Escolar',
  Division_Escolar: 'Division_Escolar',
  Turno: 'Turno'
};

exports.Prisma.Divison_de_alumnoScalarFieldEnum = {
  DivisionDA_ID: 'DivisionDA_ID',
  DNi_Alumno: 'DNi_Alumno',
  Division_ID: 'Division_ID',
  Anio_Calendario: 'Anio_Calendario'
};

exports.Prisma.EvaluacionesScalarFieldEnum = {
  Evaluacion_ID: 'Evaluacion_ID',
  Clase_ID: 'Clase_ID',
  Fecha: 'Fecha',
  Detalles: 'Detalles'
};

exports.Prisma.FaltasScalarFieldEnum = {
  Falta_ID: 'Falta_ID',
  DNI_Alumno: 'DNI_Alumno',
  Fecha: 'Fecha',
  Tipo: 'Tipo',
  jutificada: 'jutificada'
};

exports.Prisma.MateriaScalarFieldEnum = {
  Materia_ID: 'Materia_ID',
  Nombre: 'Nombre',
  Ano_escolar: 'Ano_escolar',
  Horas_Semanales: 'Horas_Semanales'
};

exports.Prisma.NotasScalarFieldEnum = {
  Notas_ID: 'Notas_ID',
  Nota: 'Nota',
  DNI_Alumno: 'DNI_Alumno',
  Evaluacion_ID: 'Evaluacion_ID'
};

exports.Prisma.ProfesorScalarFieldEnum = {
  DNI_Profesor: 'DNI_Profesor',
  Nombre: 'Nombre',
  Apellido: 'Apellido',
  Mail: 'Mail',
  Contrasena: 'Contrasena'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  administracion: 'administracion',
  alumno: 'alumno',
  Clase: 'Clase',
  division: 'division',
  divison_de_alumno: 'divison_de_alumno',
  evaluaciones: 'evaluaciones',
  faltas: 'faltas',
  materia: 'materia',
  notas: 'notas',
  profesor: 'profesor'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
