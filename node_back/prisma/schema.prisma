// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model administracion {
  DNI_Admin Int @id 
  Nombre String @db.VarChar(100)
  Apellido String @db.VarChar(100)
  Mail String @db.VarChar(100)
  Contrasena String @db.VarChar(100)

  
}
model alumno {
  Dni_Alumno      Int      @id 
  Nombre          String?  @db.VarChar(100) 
  Apellido        String?   @db.VarChar(100)
  Mail            String?   @db.VarChar(100)
  contrasena String        @db.VarChar(100)
  divisiones divison_de_alumno[]
  notas notas[]
  faltas faltas[]
}
model Clase {
  Clase_ID   Int        @id @default(autoincrement())
  Division_ID Int?
  Materia_ID   Int? @unique 
  Profesor profesor? @relation(fields: [Profesor_ID], references: [DNI_Profesor])
  Profesor_ID  Int?
  Fecha_Comienzo    DateTime? @db.Date()
  Fecha_Final       DateTime? @db.Date()
}
model division {
  Division_ID     Int    @id @default(autoincrement())
  Ano_Escolar  String @db.VarChar(50) 
  Division_Escolar Int
  Turno  String @db.VarChar(100)

}
model divison_de_alumno {
  DivisionDA_ID  Int @id @default(autoincrement())
  Alumno alumno? @relation(fields: [DNi_Alumno], references: [Dni_Alumno])
  DNi_Alumno Int? 
  Division_ID Int
  Anio_Calendario Int
}
model evaluaciones {
  Evaluacion_ID Int @id @default(autoincrement())
  Clase_ID Int
  Fecha DateTime? @db.Date()
  Detalles String @db.VarChar(100)
}
model faltas {
  Falta_ID Int @id @default(autoincrement())
  Alumno alumno? @relation(fields: [DNI_Alumno], references: [Dni_Alumno])
  DNI_Alumno Int
  Fecha DateTime? @db.Date() 
  Tipo Decimal @db.Decimal(10, 1)
  jutificada Boolean
}
model materia {
  Materia_ID Int @id @default(autoincrement())
  Nombre String @db.VarChar(100)
  Ano_escolar Int
  Horas_Semanales Int 
}
model notas {
  Notas_ID Int @id @default(autoincrement())
  Nota Decimal @db.Decimal(10, 1)
  Alumno alumno? @relation(fields: [DNI_Alumno], references: [Dni_Alumno])
  DNI_Alumno Int
  Evaluacion_ID Int @unique
}
model profesor {
  DNI_Profesor Int @id @default(autoincrement())
  Nombre	String @db.VarChar(100)
  Apellido	String @db.VarChar(100)
  Mail	String @db.VarChar(100)
  Contrasena String @db.VarChar(100)
  cursos Clase[]
}